% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cost_likelihood_pmodel.R
\name{cost_likelihood_pmodel}
\alias{cost_likelihood_pmodel}
\title{Cost function computing a log-likelihood for calibration of different
simulation setups}
\usage{
cost_likelihood_pmodel(
  par,
  obs,
  drivers,
  setup,
  targets,
  par_fixed = NULL,
  parallel = FALSE,
  ncores = 2
)
}
\arguments{
\item{par}{A vector of values for the parameters to be calibrated, including
model parameters matching the calibration \code{setup} and error terms
for each target variable (for example \code{'gpp_err'}), in the same order as
the targets appear in \code{targets}.}

\item{obs}{A nested data.frame of observations, with columns \code{'sitename'}
and \code{'data'} (see \code{p_model_validation} or \code{p_model_validation_vcmax25}
to check their structure).}

\item{drivers}{A nested data.frame of driver data. See \code{\link{p_model_drivers}}
for a description of the data structure.}

\item{setup}{A character string (\code{'BRC'} or \code{'FULL'}) indicating which
parameters are calibrated. For \code{setup = 'BRC'} only the quantum yield
efficiency \code{kphio} is calibrated; for \code{setup = 'FULL'} it also includes
the soil moisture stress parameters \code{soilm_par_a} and \code{soilm_par_b}
for calibration.}

\item{targets}{A character vector indicating the target variables for which the
optimization will be done and the RMSE computed. This string must be a column 
name of the \code{data} data.frame belonging to the validation nested data.frame 
(for example 'gpp').}

\item{par_fixed}{A vector of model parameter values to keep fixed during the
calibration. Only necessary if \code{setup = 'BRC'}.}

\item{parallel}{A logical specifying whether simulations are to be parallelised
(sending data from a certain number of sites to each core). Defaults to
\code{FALSE}.}

\item{ncores}{An integer specifying the number of cores used for parallel
computing. Defaults to 2.}
}
\description{
The cost function performs a P-model run for the input drivers and model parameter
values, and computes the outcome's normal log-likelihood centered at the input
observed values and with standard deviation given as an input parameter 
(calibratable).
}
